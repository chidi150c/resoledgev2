name: Node.js App Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Docker CLI
        run: |
          sudo apt-get update
          sudo apt-get -y install docker.io

      - name: Build Docker image
        run: |
          # Build the Docker image using the provided Dockerfile
          docker build -t my-nodejs-app -f Dockerfile .
          
          # Log in to Docker Hub
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

          # Push the Docker image to Docker Hub
          docker push ${{ secrets.DOCKER_USERNAME }}/my-nodejs-app:${{ github.sha }}

          # Remove the old Docker image
          docker rmi ${{ secrets.DOCKER_USERNAME }}/my-nodejs-app:old || true
          
          # Tag the latest image as "old"
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-nodejs-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-nodejs-app:old

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          key_type: rsa
          script: |
            # Pull the latest Docker image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-nodejs-app:${{ github.sha }}
            
            # Stop and remove any existing container with the same name (if it exists)
            docker stop my-nodejs-app || true
            docker rm my-nodejs-app || true
            
            # Run the Docker container with port mapping
            docker run -d -p 35259:35259 --name my-nodejs-app ${{ secrets.DOCKER_USERNAME }}/my-nodejs-app:${{ github.sha }}
            
            # Restart your web server (e.g., Nginx)
            sudo systemctl restart nginx
